<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shanghai.dao.ListMapper" >
  <resultMap id="BaseResultMap" type="com.shanghai.vo.List" >
    <id column="list_id" property="listId" jdbcType="INTEGER" />
    <result column="list_name" property="listName" jdbcType="VARCHAR" />
    <result column="list_info" property="listInfo" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="is_valid" property="isValid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    list_id, list_name, list_info, type_id, is_valid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from list
    where list_id = #{listId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from list
    where list_id = #{listId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shanghai.vo.List" >
    insert into list (list_id, list_name, list_info, 
      type_id, is_valid)
    values (#{listId,jdbcType=INTEGER}, #{listName,jdbcType=VARCHAR}, #{listInfo,jdbcType=VARCHAR}, 
      #{typeId,jdbcType=INTEGER}, #{isValid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shanghai.vo.List" >
    insert into list
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="listId != null" >
        list_id,
      </if>
      <if test="listName != null" >
        list_name,
      </if>
      <if test="listInfo != null" >
        list_info,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="listId != null" >
        #{listId,jdbcType=INTEGER},
      </if>
      <if test="listName != null" >
        #{listName,jdbcType=VARCHAR},
      </if>
      <if test="listInfo != null" >
        #{listInfo,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shanghai.vo.List" >
    update list
    <set >
      <if test="listName != null" >
        list_name = #{listName,jdbcType=VARCHAR},
      </if>
      <if test="listInfo != null" >
        list_info = #{listInfo,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
    </set>
    where list_id = #{listId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shanghai.vo.List" >
    update list
    set list_name = #{listName,jdbcType=VARCHAR},
      list_info = #{listInfo,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      is_valid = #{isValid,jdbcType=INTEGER}
    where list_id = #{listId,jdbcType=INTEGER}
  </update>
  <select id="selectByParams" parameterType="com.shanghai.query.ListQuery" resultType="com.shanghai.query.ListQuery">
    select
    l.list_id, l.list_name, l.list_info, t.type_id, t.type_name
    from
    list l
    left join
    (
        select
        type_id, type_name
        from
        type
        where
        is_valid = 1
    ) t
    on l.type_id = t.type_id
    <where>
      l.is_valid = 1
      <if test="listId != null and listId != ''">
        and l.list_id = #{listId}
      </if>
      <if test="listName != null and listName != ''">
        and l.list_name like concat('%',#{listName},'%')
      </if>
      <if test="typeName != null and typeName != ''">
        and t.type_name like concat('%',#{typeName},'%')
      </if>
    </where>
  </select>

  <insert id="saveList" parameterType="com.shanghai.query.ListQuery">
    insert into list
    (list_name, list_info, type_id)
    VALUES
    (#{listName}, #{listInfo}, #{typeId})
  </insert>

  <update id="updateList" parameterType="com.shanghai.query.ListQuery">
    update list
    <set >
      <if test="listName != null" >
        list_name = #{listName,jdbcType=VARCHAR},
      </if>
      <if test="listInfo != null" >
        list_info = #{listInfo,jdbcType=VARCHAR},
      </if>
        type_id = #{typeId,jdbcType=INTEGER},
    </set>
    where list_id = #{listId,jdbcType=INTEGER}
  </update>

  <update id="deleteBatches">
    update
    list
    set
    is_valid = 0
    where
    list_id
    in
    <foreach collection="array" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </update>

  <select id="selectByListId" parameterType="Integer" resultType="com.shanghai.query.ListQuery">
    select
    l.list_id, l.list_name, l.list_info, t.type_id, t.type_name
    from
    list l
    left join
    (
    select
    type_id, type_name
    from
    type
    where
    is_valid = 1
    ) t
    on l.type_id = t.type_id
    where
      l.is_valid = 1
    and l.list_id = #{listId}
  </select>

  <select id="queryAllTypes" resultType="Map">
    select type_id as typeId, type_name as typeName
    from type
    where is_valid = 1
  </select>

  <select id="queryListHasMusicByListId" resultType="String" parameterType="Integer">
    select m.music_name
    from list_has_music lm
    left join music m
    on lm.music_id = m.music_id
    where lm.list_id = #{listId}
    and m.is_valid = 1
  </select>

  <select id="queryAllMusicByListId" resultType="Map" parameterType="Integer">
    SELECT
      m.music_id as musicId,
      m.music_name as musicName,
      CASE
        WHEN IFNULL(m_lm.music_id, 0 ) = 0 THEN ""
        ELSE "selected" END
                   AS "selected"
    FROM
      music m
        LEFT JOIN
      ( SELECT
          m1.music_id as music_id
        FROM
          music m1
            LEFT JOIN
          list_has_music lm
          ON
            m1.music_id = lm.music_id
        WHERE
          lm.list_id = #{listId}
      ) m_lm
      ON
        m.music_id = m_lm.music_id
    WHERE
      m.is_valid =1
  </select>

  <delete id="deleteListHasMusicByListId" parameterType="Integer">
    delete from
    list_has_music
    where list_id = #{listId}
  </delete>

  <insert id="insertListHasMusic">
    insert into
    list_has_music
    (list_id, music_id)
    values
    (#{listId},#{musicId})
  </insert>

  <select id="getMaxListId" resultType="Integer">
    select max(list_id) as listId
    from list
  </select>
</mapper>